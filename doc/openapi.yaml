openapi: 3.0.0
info:
    title: Todo-list API
    version: "1"

servers:
    -   url: http://localhost:7777
        description: Main server REST API

tags:
    -   name: Authentication
        description: Endpoints for create user, get JWT, refresh and logout
    -   name: Todo-List

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
    schemas:
        CreateTask:
            type: object
            properties:
                title:
                    type: string
                    required: true
                description:
                    type: string
                parent_id:
                    type: integer
                    default: null
                    description: Relation to parent task.
                priority:
                    type: integer
                    enum:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5

        UpdateTask:
            type: object
            properties:
                title:
                    type: string
                    required: true
                description:
                    type: string
                parent_id:
                    type: integer
                    default: null
                    description: Relation to parent task.
                priority:
                    type: integer
                    enum:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5

        UpdateStatus:
            type: object
            properties:
                status:
                    type: string
                    enum:
                        - todo
                        - done

        TaskItem:
            type: object
            properties:
                id:
                    type: integer
                    default: 1
                title:
                    type: string
                description:
                    type: string
                parent_id:
                    type: integer
                    default: null
                    description: Relation to parent task.
                status:
                    type: string
                    enum:
                        - todo
                        - done
                priority:
                    type: integer
                    enum:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                completed_at:
                    type: string
                    format: date-time
                    default: null
                created_at:
                    type: string
                    format: date-time

        TaskItems:
            type: array
            items:
                $ref: '#/components/schemas/TaskItem'


        UserRegister:
            type: object
            properties:
                name:
                    type: string
                email:
                    type: string
                password:
                    type: string

        UserLogin:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        JWTAuth:
            type: object
            properties:
                access_token:
                    type: string
                token_type:
                    type: string
                    example: bearer
                expires_in:
                    type: integer
                    example: 600
        UserPayload:
            type: object
            properties:
                id:
                    type: integer
                name:
                    type: string
                email:
                    type: string
                email_verified_at:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time


security:
    -   bearerAuth: [ ]

paths:

    /api/auth/register:
        post:
            tags:
                - Authentication
            summary: Register new user.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserRegister'
            responses:
                201:
                    description: User created.

    /api/auth/login:
        post:
            tags:
                - Authentication
            summary: Get JWT user.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserLogin'
            responses:
                '200':
                    description: Response JWT.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    data:
                                        $ref: '#/components/schemas/JWTAuth'
    /api/auth/logout:
        post:
            tags:
                - Authentication
            summary: Logout auth user.
            responses:
                '200':
                    description: Response JWT.
    /api/auth/me:
        post:
            tags:
                - Authentication
            summary: Get User Payload.
            responses:
                '200':
                    description: User Payload.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPayload'
    /api/auth/refresh:
        post:
            tags:
                - Authentication
            summary: Refresh access token
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                                data:
                                    $ref: '#/components/schemas/JWTAuth'

            responses:
                '200':
                    description: User Payload.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPayload'
    /api/tasks:
        get:
            tags:
                - Todo-List
            security:
                -   bearerAuth: [ ]
            parameters:
                -   in: query
                    name: status
                    description: Filtering by status.
                    schema:
                        type: string
                        enum:
                            - todo
                            - done

                -   in: query
                    name: priority_from
                    description: Filtering by priority from.
                    schema:
                        type: integer
                        enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5

                -   in: query
                    name: priority_to
                    description: Filtering by priority to.
                    schema:
                        type: integer
                        enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5

                -   in: query
                    name: search
                    description: Filtering by keyword, fulltext search.
                    schema:
                        type: string

                -   in: query
                    name: sort_by
                    description: Sort by field.
                    schema:
                        type: string
                        enum:
                            - completed_at
                            - created_at
                            - priority
                        default: created_at
                -   in: query
                    name: order
                    description: Type sort.
                    schema:
                        type: string
                        enum:
                            - desc
                            - asc
                        default: asc

            summary: Get tasks lists.
            responses:
                '200':
                    description: Get all tasks auth user.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TaskItems'


        post:
            tags:
                - Todo-List
            security:
                -   bearerAuth: [ ]
            summary: Store task.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTask'
            responses:
                '201':
                    description: Task created.

    /api/tasks/{task}:

        get:
            tags:
                - Todo-List
            security:
                -   bearerAuth: [ ]
            summary: Get task.
            responses:
                '200':
                    description: Task item.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TaskItem'


        put:
            tags:
                - Todo-List
            security:
                -   bearerAuth: [ ]
            summary: Update task.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTask'
            responses:
                '201':
                    description: Update task.

        patch:
            tags:
                - Todo-List
            security:
                -   bearerAuth: [ ]
            summary: Update task, one field.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTask'
            responses:
                '201':
                    description: Task updated.

        delete:
            tags:
                - Todo-List
            security:
                -   bearerAuth: [ ]
            summary: Delete task.
            responses:
                '204':
                    description: Task deleted.

    /api/tasks/{task}/change-status:

        patch:
            tags:
                - Todo-List
            security:
                -   bearerAuth: [ ]
            summary: Update task, one field.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStatus'
            responses:
                '200':
                    description: Status update

